# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    - name: Install npm dependencies
      run: npm install
    - name: Run build task
      run: npm run build --if-present
    - name: Deploy to Server
      run: scp -i ${{ secrets.SSH_PRIVATE_KEY }} build/ ${{ secrets.REMOTE_USER }}@54.197.214.25:/tmp
      
      # with:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #     SOURCE: "build/"
      #     REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
      #     REMOTE_USER: ${{ secrets.REMOTE_USER }}
      #     TARGET: "/home/ubuntu"
          

#==============================================================
# jobs:
#   build:
#     name: Deploy to EC2 on master branch push
#     runs-on: ubuntu-latest 

#     strategy:
#       matrix:
#         node-version: [20.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v3
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#       env:
#         SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
#         REMOTE_HOST: ${{ secrets.HOST_DNS }}
#         REMOTE_USER: ${{ secrets.USERNAME }}
#         TARGET: ${{ secrets.TARGET_DIR }}
#     - run: npm ci
#     - run: npm run build 

